name: PR Benchmarks

on:
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'crates/**/*.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/pr-benchmark.yml'
      - '.github/benchmark-baselines.json'

permissions:
  contents: read
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  benchmark:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Run integration tests with performance checks
        run: |
          echo "Running integration tests..."
          cargo test --workspace --release 2>&1 | tee test-output.txt

          echo ""
          echo "Performance tests:"
          grep "✅" test-output.txt || true

      - name: Run CPU benchmarks
        run: |
          echo "Running CPU benchmarks (quick mode)..."
          cargo bench -p wasm-chord-cpu --bench gemm -- --quick 2>&1 | tee bench-cpu.txt

      - name: Run runtime benchmarks
        run: |
          echo "Running runtime benchmarks (quick mode)..."
          cargo bench -p wasm-chord-runtime --bench attention -- --quick 2>&1 | tee bench-runtime.txt

      - name: Check for performance regressions
        id: regression-check
        run: |
          echo "Checking performance against baselines..."
          bash scripts/check-benchmark-regression.sh
        continue-on-error: true

      - name: Extract benchmark summary
        if: always()
        run: |
          echo "## 📊 Benchmark Results" > benchmark-summary.md
          echo "" >> benchmark-summary.md

          if [ -f bench-cpu.txt ]; then
            echo "### CPU Matmul Benchmarks" >> benchmark-summary.md
            echo "\`\`\`" >> benchmark-summary.md
            grep -A 2 "time:" bench-cpu.txt | head -20 >> benchmark-summary.md || true
            echo "\`\`\`" >> benchmark-summary.md
            echo "" >> benchmark-summary.md
          fi

          if [ -f bench-runtime.txt ]; then
            echo "### Runtime Attention Benchmarks" >> benchmark-summary.md
            echo "\`\`\`" >> benchmark-summary.md
            grep -A 2 "time:" bench-runtime.txt | head -20 >> benchmark-summary.md || true
            echo "\`\`\`" >> benchmark-summary.md
            echo "" >> benchmark-summary.md
          fi

          if [ -f test-output.txt ]; then
            echo "### Integration Test Performance" >> benchmark-summary.md
            echo "\`\`\`" >> benchmark-summary.md
            grep "✅.*µs\|✅.*ms" test-output.txt >> benchmark-summary.md || echo "No performance data" >> benchmark-summary.md
            echo "\`\`\`" >> benchmark-summary.md
          fi

          echo "" >> benchmark-summary.md
          echo "---" >> benchmark-summary.md
          echo "*Thresholds defined in [benchmark-baselines.json](.github/benchmark-baselines.json)*" >> benchmark-summary.md

      - name: Comment PR with results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('benchmark-summary.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Upload benchmark artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            bench-*.txt
            test-output.txt
            benchmark-summary.md

      - name: Fail if regressions detected
        if: steps.regression-check.outcome == 'failure'
        run: |
          echo "❌ Performance regressions detected!"
          echo "Please review the benchmark results above."
          echo ""
          echo "If the regression is expected (e.g., adding features),"
          echo "update the baselines in .github/benchmark-baselines.json"
          exit 1

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-integration-${{ hashFiles('**/Cargo.lock') }}

      - name: Run core integration tests
        run: |
          cargo test -p wasm-chord-core --test integration_inference_simple --release

      - name: Test inference performance baselines
        run: |
          echo "Checking performance baselines from integration tests..."
          cargo test -p wasm-chord-core --test integration_inference_simple --release -- performance_baseline 2>&1 | tee perf-baseline.txt

          # Check for assertion failures
          if grep -q "assertion.*failed" perf-baseline.txt; then
            echo "❌ Performance baseline tests failed!"
            exit 1
          fi

          echo "✅ All performance baselines passed"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: perf-baseline.txt
