[workspace]
resolver = "2"
members = [
    "crates/wasm-chord-core",
    "crates/wasm-chord-runtime",
    "crates/wasm-chord-gpu",
    "crates/wasm-chord-cpu",
    "examples/cli",
    "examples/inference",
    "examples/simple-generation",
    "examples/chat",
    "examples/chat-streaming",
    "examples/gpu-generation",
    "examples/benchmark",
    "examples/transpose-debug",
    "examples/model-coherence-test",
    "examples/tokenizer-debug",
    "examples/chat-model-test",
    "examples/debug-generation",
    "examples/dump-gguf-shapes",
    "examples/logit-comparison",
    "examples/first-token-comparison",
    "examples/implementation-comparison",
    "examples/gguf-diagnostic",
    "examples/debug-gibberish",
    "examples/test-embeddings",
    "examples/test-fix",
    "examples/debug-embedding-step",
    "examples/check-embedding-format",
    "examples/test-rmsnorm",
    "examples/abi-tests",
    "examples/vocab-check",
    "examples/argmax-test",
    "examples/streaming-inference",
    "examples/kernel-verification",
    "examples/ollama-comparison",
    "examples/tokenization-check",
    "examples/lm-head-debug",
    "examples/q4k-fix-test",
    "examples/ollama-comprehensive-test",
    "examples/weight-verification",
    "examples/layer-debug",
    "examples/rmsnorm-debug",
    "examples/find-token-id",
    "examples/logit-analysis",
    "examples/debug-performance",
    "examples/wasm-memory64-multi-test",
    "examples/gpu-test",
    "examples/gpu-cpu-comparison",
    "examples/memory64-test",
    "examples/wasm-memory64-test",
    "examples/multi-memory-test",
    "examples/sharding-test",
    "examples/wasm-10gb-test",
    "examples/fused-kernels-test",
    "examples/debug-forward-pass",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/querent-ai/wasm-chord"
authors = ["Querent AI <team@querent.xyz>"]

[workspace.dependencies]
# Internal crates
wasm-chord-core = { path = "crates/wasm-chord-core" }
wasm-chord-runtime = { path = "crates/wasm-chord-runtime" }
wasm-chord-gpu = { path = "crates/wasm-chord-gpu" }
wasm-chord-cpu = { path = "crates/wasm-chord-cpu" }

# Core dependencies
bytemuck = { version = "1.14", features = ["derive"] }
half = "2.7.0"
thiserror = "2.0.17"
anyhow = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "2.0.1"

# Wasm-specific
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
web-sys = { version = "0.3", features = [
    "console",
    "Window",
    "Document",
    "Performance",
] }

# GPU
wgpu = { version = "27.0.1", default-features = false }

# Async
futures = "0.3"
tokio = { version = "1.35", features = ["full"] }

# Math
ndarray = { version = "0.16.1", features = ["rayon"] }
rayon = "1.8"

# Candle ML framework (CPU backend)
candle-core = "0.9"
candle-nn = "0.9"

# Testing
criterion = "0.7.0"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
strip = true

[profile.dev]
opt-level = 0
debug = true

# Optimized for Wasm size
[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = true
codegen-units = 1
panic = "abort"
